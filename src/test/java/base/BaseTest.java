package base;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Base64;
import org.apache.commons.io.FileUtils;
import org.apache.commons.io.IOUtils;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.ITestResult;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import com.relevantcodes.extentreports.ExtentReports;
import com.relevantcodes.extentreports.ExtentTest;
import com.relevantcodes.extentreports.LogStatus;
import utils.ConfigReader;


public class BaseTest {
	
	private final static String REPORT_GENERATED_BY = "Pratik Patil";
	private final static String CHROME_DRIVER_PATH = "./drivers/chromedriver.exe";
	private final static String SCREENSHOT_LOCATION = "C:\\screenshots\\test-image.png";

	protected static ExtentReports extent;
	protected static ExtentTest logger;
	protected static WebDriver driver;

	@BeforeTest
	public void beforeTest() {
		extent = new ExtentReports(System.getProperty("user.dir") + "/test-output/ExtentReport.html", true);
		extent.addSystemInfo("Reports Generated By: ", REPORT_GENERATED_BY);
		extent.loadConfig(new File(System.getProperty("user.dir") + "\\extent-config.xml"));
		System.setProperty("webdriver.chrome.driver", CHROME_DRIVER_PATH);
		driver = new ChromeDriver();
		driver.manage().window().maximize();
		driver.get(ConfigReader.getProperty("BASE_URL"));
	}
	
	@AfterMethod
	public void afterMethod(ITestResult result) throws IOException, InterruptedException {
		if (result.getStatus() == ITestResult.FAILURE) {
			captureScreenshot();
			logger.log(LogStatus.FAIL, "Test Case Failed is " + result.getName());
			logger.log(LogStatus.FAIL, "Test Case Failed is " + result.getThrowable());
		} else if (result.getStatus() == ITestResult.SKIP) {
			logger.log(LogStatus.SKIP, "Test Case Skipped is " + result.getName());
		}
		extent.endTest(logger);
	}

	@AfterTest
	public void endReport() throws InterruptedException {
		Thread.sleep(5000);
		driver.quit();
		extent.flush();
		extent.close();
	}

	public static void captureScreenshot() throws IOException, InterruptedException {
		File screenshot = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
		File screenshotLocation = new File(SCREENSHOT_LOCATION);
		FileUtils.copyFile(screenshot, screenshotLocation);
		Thread.sleep(2000);
		InputStream is = new FileInputStream(screenshotLocation);
		byte[] imageBytes = IOUtils.toByteArray(is);
		Thread.sleep(2000);
		String base64 = Base64.getEncoder().encodeToString(imageBytes);
		logger.log(LogStatus.INFO, "Snapshot below: " + logger.addBase64ScreenShot("data:image/png;base64," + base64));
	}
	
	
}
